# IDENTIFICAR REGISTRO CON ESTADO ACTUAL DEL AEROPUERTO
#Se utiliza un Window para extraer, del dataframe pasado por parámetro #Es decir, por cada llave natural, extrae la última versión.
df2_aeropuertos = aeropuertos.alias('df2_aeropuertos')
window = Window.partitionBy(df2_aeropuertos['sigla']).orderBy(df2_aeropuertos['Ano'].desc())
df2_aeropuertos = df2_aeropuertos.select('*', f.rank().over(window).alias('rank')).filter(f.col('rank') == 1) 
df2_aeropuertos = df2_aeropuertos.drop('rank')
#Ajustar nombres en nuevo DF para poder hacer el join con el df original
df2_aeropuertos = df2_aeropuertos.selectExpr('id_aeropuerto','Ano as Ano_2')
#Realiza left join entre aeropuertos y df2_aeropuertos
df = aeropuertos.join(df2_aeropuertos, how = 'left', on ='id_aeropuerto')

#estado_actual = No, registros anteriores de modificación del aerorpuerto
#estado_actual = Si, último registro de modificación del aeropuerto
df = df.withColumn('estado_actual', f.when(df['Ano_2'].isNull(), 'No').otherwise('Si'))
df = df.withColumn('fecha_vigencia_final', f.when(df['estado_actual'] == 'Si', f.to_date(f.lit('2199-12-31'), 'yyyy-MM-dd')).
                   otherwise(f.to_date(concat(col('Ano'),f.lit('-12-31')), 'yyyy-MM-dd')))

# IDENTIFICAR PRIMER REGISTRO PARA ASIGNAR FECHA VIGENCIA INICIAL
#Se utiliza un Window para extraer, del dataframe pasado por parámetro #Es decir, por cada llave natural, extrae la última versión.
df2_aeropuertos = aeropuertos.alias('df2_aeropuertos')
window = Window.partitionBy(df2_aeropuertos['sigla']).orderBy(df2_aeropuertos['Ano'].asc())
df2_aeropuertos = df2_aeropuertos.select('*', f.rank().over(window).alias('rank')).filter(f.col('rank') == 1) 
df2_aeropuertos = df2_aeropuertos.drop('rank')
#Ajustar nombres en nuevo DF para poder hacer el join con el df original
df2_aeropuertos = df2_aeropuertos.selectExpr('id_aeropuerto','fecha_construccion as fecha_vigencia_inicial','Ano as Ano_3')
#Realiza left join entre aeropuertos y df2_aeropuertos
df = df.join(df2_aeropuertos, how = 'left', on ='id_aeropuerto')

#estado_inicial = No, registros posteriores de modificación del aerorpuerto
#estado_inicial = Si, primer registro de construcción del aeropuerto
df = df.withColumn('estado_inicial', f.when(df['Ano_3'].isNull(), 'No').otherwise('Si'))
df = df.withColumn('fecha_vigencia_inicial', f.when(df['estado_inicial'] == 'Si', df['fecha_construccion']).
                   otherwise(f.to_date(concat(col('Ano'),f.lit('-01-01')), 'yyyy-MM-dd')))

# Seleccionar columnas para archivo csv
aeropuertos = df.select('id_aeropuerto','sigla','nombre','categoria','clase','tipo','municipio','departamento',
 'propietario','explotador','resolucion','fecha_construccion','fecha_vigencia','Ano',
          'latitud','longitud','elevacion','numero_vuelos_origen','longitud_pista','ancho_pista','pbmo',
          'estado_actual','fecha_vigencia_inicial','fecha_vigencia_final')
